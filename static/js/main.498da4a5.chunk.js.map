{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","TESTER","document","getElementById","console","log","Plotly","plot","x","y","margin","t","showSendToCloud","data","type","marker","color","line","width","newPlot","title","font","size","responsive","BUILD","className","id","style","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yNAoDeA,MAhDf,WAyCE,OAvCAC,qBAAU,WACR,IAAMC,EAASC,SAASC,eAAe,UAEvCC,QAAQC,IAAIJ,GAEZK,IAAOC,KAAKN,EAAQ,CAAC,CACnBO,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,MACd,CACFC,OAAQ,CAAEC,EAAG,IACZ,CAAEC,iBAAiB,IAEtB,IAYIC,EAAO,CAZE,CACXC,KAAM,MACNN,EAAG,CAAC,EAAG,EAAG,EAAG,GACbC,EAAG,CAAC,EAAG,GAAI,EAAG,GACdM,OAAQ,CACJC,MAAO,UACPC,KAAM,CACFC,MAAO,QAcjBZ,IAAOa,QAAQlB,EAAQY,EAPV,CACXO,MAAO,+BACPC,KAAM,CAACC,KAAM,KAGF,CAACC,YAAY,OAM5BnB,QAAQC,IAAIC,IAAOkB,OAGjB,qBAAKC,UAAU,MAAf,SACE,qBAAKC,GAAG,SAASC,MAAO,CAAET,MAAO,QAASU,OAAQ,cCnCzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,K","file":"static/js/main.498da4a5.chunk.js","sourcesContent":["import './App.css';\nimport Plotly from 'plotly.js-dist'\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  useEffect(() => {\n    const TESTER = document.getElementById('tester');\n\n    console.log(TESTER)\n\n    Plotly.plot(TESTER, [{\n      x: [1, 2, 3, 4, 5],\n      y: [1, 2, 4, 8, 16]\n    }], {\n      margin: { t: 0 }\n    }, { showSendToCloud: true });\n\n    var trace1 = {\n      type: 'bar',\n      x: [1, 2, 3, 4],\n      y: [5, 10, 2, 8],\n      marker: {\n          color: '#C8A2C8',\n          line: {\n              width: 2.5\n          }\n      }\n    };\n    \n    var data = [ trace1 ];\n    \n    var layout = { \n      title: 'Responsive to window\\'s size!',\n      font: {size: 18}\n    };\n    \n    var config = {responsive: true}\n    \n    Plotly.newPlot(TESTER, data, layout, config );\n  });\n\n  /* Current Plotly.js version */\n  console.log(Plotly.BUILD);\n\n  return (\n    <div className=\"App\">\n      <div id=\"tester\" style={{ width: '600px', height: '250px' }}></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}